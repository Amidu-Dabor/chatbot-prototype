name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service:
          - name: api_gateway
            dockerfile: api_gateway/Dockerfile
            image: yourusername/chatbot_prototype_api_gateway:latest
          - name: auth_service
            dockerfile: services/auth_service/Dockerfile
            image: yourusername/chatbot_prototype_auth_service:latest
          - name: general_chat_service
            dockerfile: services/general_chat_service/Dockerfile
            image: yourusername/chatbot_prototype_general_chat_service:latest
          - name: study_support_service
            dockerfile: services/study_support_service/Dockerfile
            image: yourusername/chatbot_prototype_study_support_service:latest
          - name: data_service
            dockerfile: services/data_service/Dockerfile
            image: yourusername/chatbot_prototype_data_service:latest
          - name: response_service
            dockerfile: services/response_service/Dockerfile
            image: yourusername/chatbot_prototype_response_service:latest
          - name: system_prompt_service
            dockerfile: services/system_prompt_service/Dockerfile
            image: yourusername/chatbot_prototype_system_prompt_service:latest
          - name: training_service
            dockerfile: services/training_service/Dockerfile
            image: yourusername/chatbot_prototype_training_service:latest
          - name: ui
            dockerfile: ui/Dockerfile
            image: yourusername/chatbot_prototype_ui:latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push ${{ matrix.service.name }} image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ${{ matrix.service.dockerfile }}
          push: true
          tags: ${{ matrix.service.image }}

  deploy-modal:
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install Modal CLI and dependencies
        run: pip install modal

      - name: Deploy to Modal
        env:
          MODAL_API_KEY: ${{ secrets.MODAL_API_KEY }}
        run: python modal_deploy.py
